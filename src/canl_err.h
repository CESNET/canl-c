#ifndef CANL_ERR_H
#define CANL_ERR_H

typedef enum _CANL_ERROR
{
    no_error = 0,
    emptyCertPath = 1000,
    ncSubjectNameError,
    notPermittedDN,
    excludedDN,
    subjAltNameExtError,
    notPermittedEmail,
    notPermittedEmailnew,
    excludedEmail,
/*    notPermittedDN,
    excludedDN,
*/    notPermittedIP,
    excludedIP,
    ncExtError,
    pathLenghtExtended,
    processLengthConstError,
    totalPathLength,
    certPathValidDate,
    conflictingTrustAnchors,
    noTrustAnchorFound,
    trustButInvalidCert,
    unknown,
    trustDNInvalid,
    trustPubKeyError,
//    signatureNotVerified,
    rootKeyIsValidButNotATrustAnchor,
    signatureNotVerified,
    NoIssuerPublicKey,
    certificateNotYetValid,
    certificateExpired,
    crlDistPtExtError,
    crlAuthInfoAccError,
    crlDistPoint,
    ocspLocation,
    certWrongIssuer,
    noCACert,
    noBasicConstraints,
    errorProcesingBC,
    noCertSign,
    pubKeyError,
    policyExtError,
//    policyQualifierError,
    policyQualifierError,
    noValidPolicyTree,
    policyMapExtError,
    invalidPolicyMapping,
//    invalidPolicyMapping,
//    policyExtError,
//    policyQualifierError,
    policyConstExtError,
    policyInhibitExtError,
//    policyConstExtError,
    explicitPolicy,
//    explicitPolicy,
    invalidPolicy,
    certPathCheckerError,
    criticalExtensionError,
    unknownCriticalExt,
    QcEuCompliance,
    QcSSCD,
    QcLimitValueAlpha,
    QcLimitValueNum,
    QcUnknownStatement,
    QcStatementExtError,
    crlIssuerException,
    noCrlInCertstore,
    crlExtractionError,
    localValidCRL,
    localInvalidCRL,
    onlineCRLWrongCA,
    onlineValidCRL,
    onlineInvalidCRL,
    noCrlSigningPermited,
    crlVerifyFailed,
    crlNoIssuerPublicKey,
    crlReasonExtError,
    certRevoked,
    revokedAfterValidation,
    notRevoked,
    crlUpdateAvailable,
    distrPtExtError,
    deltaCrlExtError,
//    crlIssuerException,
    crlNbrExtError,
//    crlExtractionError,
//    distrPtExtError,
    noBaseCRL,
    crlBCExtError,
    crlOnlyUserCert,
    crlOnlyCaCert,
    crlOnlyAttrCert,
    noValidCrlFound,
    loadCrlDistPointError,
    trustAnchorIssuerError
} CANL_ERROR;

typedef enum _CANL_ERROR_ORIGIN
{
    unknown_error = 0,
    posix_error = 1,
    ssl_error,
    colin_error
} CANL_ERROR_ORIGIN;

#endif
